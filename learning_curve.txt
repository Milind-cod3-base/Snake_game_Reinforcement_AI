Things learnt during this project:

1. About Enum class and its importance
2. Pygame classes and methods
3. namedtuple: This creates touples which aleady have names, like
        coordinates (x,y) in the project
4. _single_leading_underscore: weak "internal use" indicator.
    E.g. from M import * does not import objects whose name starts 
    with an underscore.

5. why in step 2 of play_step method? there is addition on snake's head?
Ans: the move method which is called above us resets the snake's head coordinates. 
Hence these new coordinates of head must be put inside the snakes body.
Hence, we insert the new head into the snake's head.

6. next_idx = (idx+1)%4, this will move to the next index of the list.
eg. if idx is 0, then (0+1)%4 = 1 and if idx is 1, then (1+1)%4 is 2. Hence the next 
index could be calculated using this.

7. Deque (Doubly Ended Queue) in Python is implemented using the module “collections“.
 Deque is preferred over a list in the cases where we need quicker append 
and pop operations from both the ends of the container, as deque provides an O(1) time complexity 
for append and pop operations as compared to list which 
provides O(n) time complexity. [methods: pop, append, popleft (deletes first element), appendleft (appends first element)]

8. Convergence: is a point in training a model in which loss settles to within an error range around final value. Additional training will not improve the model.

9. Q learning:?

10. random moves: trade off between exploration and exploitation -> first let the model explore in early phase, but once
the model gains some knowledge exploitation must happen.

11. Code refacoring: is a process of restructuring existing computer code - changing the factoring - without changing its behavior. 
It is intended to improve the design, structure, and/or implementation of the software, while preserving its
functionality.

12:Pytorch -> saving and loading models: ??